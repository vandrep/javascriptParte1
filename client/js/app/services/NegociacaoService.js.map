{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","get","then","console","log","negociacoes","map","Date","objeto","data","quantidade","valor","catch","erro","Error","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","periodos","reduce","dados","periodo","concat","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\r\nimport {ConnectionFactory} from './ConnectionFactory';\r\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\r\nimport {Negociacao} from \"../models/Negociacao\";\r\n\r\nexport class NegociacaoService{\r\n    constructor(){\r\n        this._http = new HttpService();\r\n    }\r\n    obterNegociacoesDaSemana(){\r\n        return this._http\r\n            .get(\"negociacoes/semana\")\r\n            .then(negociacoes => {\r\n                console.log(negociacoes);                                        \r\n                return negociacoes\r\n                    .map(objeto =>new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível obter as negociações da semana\")\r\n            });\r\n    }\r\n    obterNegociacoesDaSemanaAnterior(){\r\n        return this._http\r\n            .get(\"negociacoes/anterior\")\r\n            .then(negociacoes => {\r\n                console.log(negociacoes);                                        \r\n                return negociacoes\r\n                    .map(objeto =>new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível obter as negociações da semana anterior\")\r\n            })\r\n    }\r\n    obterNegociacoesDaSemanaRetrasada(){\r\n        return this._http\r\n            .get(\"negociacoes/retrasada\")\r\n            .then(negociacoes => {\r\n                console.log(negociacoes);                                        \r\n                return negociacoes\r\n                    .map(objeto =>new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n            })\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível obter as negociações da semana retrasada\")\r\n            })\r\n    }\r\n    obterNegociacoes(){\r\n        return Promise.all([\r\n            this.obterNegociacoesDaSemana(),\r\n            this.obterNegociacoesDaSemanaAnterior(),\r\n            this.obterNegociacoesDaSemanaRetrasada()\r\n        ]).then(periodos => {\r\n            let negociacoes = periodos\r\n                .reduce((dados, periodo) => {\r\n                    console.log(\"Uma vez\");\r\n                    return dados.concat(periodo)}, []);                \r\n            return negociacoes;\r\n        }).catch(erro => {\r\n            throw new Error(erro);\r\n        });    \r\n    }\r\n\r\n    cadastra(negociacao){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.adiciona(negociacao))\r\n            .then(() => \"Negociação adicionada com sucesso\")\r\n            .catch(erro => {\r\n                console.log(erro);                \r\n                throw new Error(\"Não foi possível adicionar a negociação\")\r\n            })\r\n    }\r\n\r\n    lista(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.listaTodos())\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível obter as negociações\");\r\n            })\r\n    }\r\n\r\n    apaga(){\r\n        return ConnectionFactory\r\n            .getConnection()\r\n            .then(connection => new NegociacaoDao(connection))\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => \"Negociações apagadas com sucesso\")\r\n            .catch(erro => {\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível apagar as negociações\")                \r\n            })            \r\n    }\r\n\r\n    importa(listaAtual){\r\n        return this.obterNegociacoes()\r\n            .then(negociacoes => \r\n                negociacoes.filter(negociacao => \r\n                    !listaAtual.some(negociacaoExistente => \r\n                        negociacao.isEquals(negociacaoExistente))))   \r\n            .catch(erro =>{\r\n                console.log(erro);\r\n                throw new Error(\"Não foi possível buscar negociações para importar\");\r\n            })\r\n    }\r\n}"]}